import streamlit as st
import pickle
import numpy as np

st.set_page_config(page_title="Stres Tahmin UygulamasÄ±", layout="centered")
st.title("ğŸ§  Stres Tahmin UygulamasÄ±")
st.markdown("Bu uygulama, belirli psikolojik ve davranÄ±ÅŸsal Ã¶lÃ§Ã¼tlere gÃ¶re kiÅŸinin stresli olup olmadÄ±ÄŸÄ±nÄ± tahmin eder.")

features = ['cesd', 'mbi_ex', 'mbi_ea', 'health', 'mbi_cy']
descriptions = [
    '70 Ã¼zeri â†’ yÃ¼ksek depresyon riski',
    '80 Ã¼zeri â†’ tÃ¼kenmiÅŸlik ihtimali',
    '60 Ã¼zeri â†’ empati kaybÄ± olabilir',
    '70 Ã¼zeri â†’ saÄŸlÄ±k algÄ±sÄ± dÃ¼ÅŸÃ¼k olabilir',
    '80 Ã¼zeri â†’ duyarsÄ±zlaÅŸma riski'
]

st.sidebar.header("ğŸ”§ Girdi DeÄŸerleri")
user_values = []
for i in range(len(features)):
    val = st.sidebar.slider(f"{features[i]}", 0, 100, 50)
    st.sidebar.caption(descriptions[i])
    user_values.append(val)

input_data = np.array(user_values).reshape(1, -1)

# Model ve scaler yÃ¼kle
with open("model.pkl", "rb") as f:
    model = pickle.load(f)
with open("scaler.pkl", "rb") as f:
    scaler = pickle.load(f)

# Normalize ve tahmin
input_scaled = scaler.transform(input_data)
prediction = model.predict(input_scaled)[0]

# SonuÃ§
st.subheader("ğŸ“Š Tahmin Sonucu:")
if prediction == 1:
    st.error("ğŸ”´ Tahmin: **Stresli**")
else:
    st.success("ğŸŸ¢ Tahmin: **Stresli DeÄŸil**")

st.caption("Model: KNN (Korelasyonla seÃ§ilmiÅŸ 5 Ã¶zellik)")

